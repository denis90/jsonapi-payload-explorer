{"version":3,"sources":["PayloadSample.js","compoments/JSONEditor.js","compoments/SearchBar.js","compoments/TreeView.js","utils/serialize.js","utils/tree.js","compoments/Viewer.js","App.js","utils/is-json-string.js","index.js"],"names":["PayloadSample","JSONEditor","react_default","a","createElement","className","this","props","Codemirror_default","value","payload","onChange","onPayloadChanged","options","lineNumbers","mode","name","json","theme","React","Component","Tree","_this$props","handleSearchOnChange","searchString","selectPrevMatch","selectNextMatch","currentSearchIndex","totalFound","stats","concat","onClick","class","TreeView","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","treeData","root","onSearchStringChange","bind","assertThisInitialized","e","setState","target","_this$state","_this$state2","_this2","_this$state3","SearchBar_Tree","index_esm","canDrag","rowHeight","object","node","subtitleHeight","searchQuery","searchFocusOffset","searchFinishCallback","matches","length","TEMP_ID","serializeObject","data","included","id","tempId","uuid","type","attributes","method","children","relationships","key","relationshipData","Array","isArray","_object$children","map","relationship","serializeRelationship","push","apply","toConsumableArray","child","find","findInIncluded","decorateForTree","keys","expanded","title","attr","subtitle","attributeList","JSON","stringify","forEach","Viewer","parse","_","rootObject","TreeView_TreeView","App","payloadSample","invalid","str","isJSONString","JSONEditor_JSONEditor","cx","Viewer_Viewer","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c61bfbd.chunk.js","sourcesContent":["export default `{\n  \"data\": {\n    \"type\": \"articles\",\n    \"attributes\": {\n      \"title\": \"Sideposting with json:api\"\n    },\n    \"relationships\": {\n      \"tags\": {\n        \"data\": [{ \"type\": \"tags\", \"id\": \"9\" },\n                 { \"type\": \"tags\", \"temp-id\": \"1\" },\n                 { \"type\": \"tags\", \"temp-id\": \"2\" }]\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"type\": \"tags\",\n      \"temp-id\": \"1\",\n      \"attributes\": {\n        \"label\": \"JSON\",\n        \"total\": 42\n      }\n    },\n    {\n      \"type\": \"tags\",\n      \"temp-id\": \"2\",\n      \"attributes\": {\n        \"label\": \"REST\"\n      }\n    }\n  ]\n}`;\n","import React from 'react';\n\nimport CodeMirror from 'react-codemirror';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/solarized.css';\n\nimport './JSONEditor.css';\n\nexport default class JSONEditor extends React.Component {\n  render() {\n    return(\n      <div className={this.props.className}>\n        <CodeMirror\n          value={this.props.payload}\n          onChange={this.props.onPayloadChanged}\n          options={{\n            lineNumbers: true,\n            mode: { name: \"javascript\", json: true },\n            theme: 'solarized'\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './SearchBar.css';\n\nexport default class Tree extends Component {\n  render() {\n    let {\n      handleSearchOnChange,\n      searchString,\n      selectPrevMatch,\n      selectNextMatch,\n      currentSearchIndex,\n      totalFound\n    } = this.props;\n\n    let stats = `${currentSearchIndex} / ${totalFound}`;\n    return (\n      <div className=\"searchBar\">\n        <label>Search: </label>\n        <input\n          onChange={handleSearchOnChange}\n          value={searchString}\n        />\n\n        { searchString && totalFound > 1 &&\n          <div className=\"control\">\n            <button className=\"previous\" onClick={selectPrevMatch}> ‹ </button>\n            <button className=\"next\" onClick={selectNextMatch}> › </button>\n            <label class=\"stats\"><span>{ stats }</span></label>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport SortableTree from 'react-sortable-tree';\nimport 'react-sortable-tree/style.css';\nimport './TreeView.css';\nimport SearchBar from './SearchBar';\n\nconst DEFAULT_ROW_HEIGHT = 62;\n\nexport default class TreeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchString: '',\n      currentSearchIndex: 0,\n      totalFound: 0,\n      treeData: [this.props.root]\n    };\n\n    this.onSearchStringChange = this.onSearchStringChange.bind(this);\n    this.selectPrevMatch = this.selectPrevMatch.bind(this);\n    this.selectNextMatch = this.selectNextMatch.bind(this);\n  }\n\n  onSearchStringChange(e) {\n    this.setState({ searchString: e.target.value });\n  };\n\n  selectPrevMatch() {\n    const { currentSearchIndex, totalFound } = this.state;\n    this.setState({\n      currentSearchIndex: currentSearchIndex !== null\n        ? (totalFound + currentSearchIndex - 1) % totalFound\n        : totalFound - 1\n    });\n  };\n\n  selectNextMatch () {\n    const { currentSearchIndex, totalFound } = this.state;\n    this.setState({\n      currentSearchIndex: currentSearchIndex !== null\n        ? (currentSearchIndex + 1) % totalFound\n        : 0\n    });\n  };\n\n  render() {\n    const {\n      treeData,\n      searchString,\n      currentSearchIndex,\n      totalFound\n    } = this.state;\n\n    return (\n      <div className=\"Tree-view\">\n        <SearchBar\n          searchString={searchString}\n          currentSearchIndex={currentSearchIndex + 1}\n          totalFound={totalFound}\n          handleSearchOnChange={this.onSearchStringChange}\n          selectPrevMatch={this.selectPrevMatch}\n          selectNextMatch={this.selectNextMatch}\n          />\n\n        <SortableTree\n          canDrag={false}\n          rowHeight={(object) => DEFAULT_ROW_HEIGHT + (object.node.subtitleHeight|| 0)}\n          treeData={treeData}\n          onChange={(treeData) => this.setState({ treeData })}\n          searchQuery={searchString}\n          searchFocusOffset={currentSearchIndex}\n          searchFinishCallback={(matches) =>\n            this.setState({\n              totalFound: matches.length,\n              currentSearchIndex: matches.length > 0\n                ? currentSearchIndex % matches.length\n                : 0\n            })\n          } />\n      </div>\n    );\n  }\n}\n","const TEMP_ID = 'temp-id';\n\nexport default function serialize(object) {\n  if (!object.data) return {};\n  return serializeObject(object.data, object.included || []);\n}\n\nfunction serializeObject(data, included) {\n  let object = {\n    id: data.id,\n    tempId: data[TEMP_ID],\n    uuid: `${data.type}-${data.id || data[TEMP_ID]}`,\n    type: data.type,\n    attributes: data.attributes || {},\n    method: data.method,\n    children: []\n  };\n\n  let { relationships } = data;\n\n  for (let key in relationships) {\n    let relationshipData = relationships[key][\"data\"];\n\n    if (Array.isArray(relationshipData)) {\n      let children = relationshipData.map((relationship) => (\n        serializeRelationship(relationship, included)\n      ));\n      object.children.push(...children);\n    } else {\n      let child = serializeRelationship(relationshipData, included);\n      object.children.push(child);\n    }\n  }\n\n  return object;\n}\n\nfunction serializeRelationship(data, included) {\n  let relationshipData = findInIncluded(data, included) || data;\n  let relationship = serializeObject(relationshipData, included);\n\n  if (!relationship.method) relationship.method = data.method;\n\n  return relationship;\n}\n\nfunction findInIncluded(data, included) {\n  let { id, type, [TEMP_ID]: tempId } = data;\n\n  if (!!id) {\n    return included.find((data) => data.type === type && data.id === id);\n  } else if (!!tempId) {\n    return included.find((data) => data.type === type && data[TEMP_ID] === tempId);\n  }\n\n  return null;\n}\n","import React from 'react';\n\nexport default function decorateForTree(object) {\n  if (Object.keys(object).length === 0) return {};\n  object.expanded = true;\n  object.title = title(object);\n  object.subtitle = subtitle(object);\n  object.subtitleHeight = Object.keys(object.attributes).length * 11;\n\n  object.children.forEach((child) => decorateForTree(child));\n\n  return object;\n}\n\nfunction title(object) {\n  if (!object.id && !object.tempId) {\n    return object.type;\n  }\n\n  let attr = object.id ? 'id' : 'temp-id';\n  return `${object.type} (${attr} = '${object.id || object.tempId}')`;\n}\n\nfunction subtitle(object) {\n  let attributeList = [];\n  for(let key in object.attributes) {\n    let value = object.attributes[key];\n    if (typeof(value) === 'object') {\n      value = JSON.stringify(value);\n    }\n    attributeList.push(\n      <li key={key}>{key}: {value}</li>\n    );\n  }\n  return (<ul>{ attributeList}</ul>);\n}\n","import React, { Component } from 'react';\nimport TreeView from './TreeView';\n\nimport serialize from '../utils/serialize';\nimport decorateForTree from '../utils/tree';\n\nexport default class Viewer extends Component {\n  render() {\n    let json = {};\n    try {\n      json = JSON.parse(this.props.payload);\n    } catch(_) {};\n    let rootObject = decorateForTree(serialize(json));\n\n    return(\n      <div className={this.props.className}>\n        <TreeView root={rootObject} key={this.props.payload}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport cx from 'classnames';\n\nimport payloadSample from './PayloadSample.js';\nimport isJSONString from './utils/is-json-string';\nimport JSONEditor from './compoments/JSONEditor';\nimport Viewer from './compoments/Viewer';\n\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { payload: payloadSample, invalid: false };\n    this.onPayloadChanged = this.onPayloadChanged.bind(this);\n  }\n\n  onPayloadChanged(payload) {\n    if (!payload) { payload = '{}'; }\n    let invalid = !isJSONString(payload);\n    this.setState({ payload, invalid });\n  }\n\n  render() {\n    let { invalid } = this.state;\n\n    return(\n      <div className=\"App\">\n        <JSONEditor\n          className={ cx(\"sidepane\", { invalid }) }\n          payload={this.state.payload}\n          onPayloadChanged={this.onPayloadChanged} />\n\n        <Viewer className=\"sidepane\" payload={this.state.payload}/>\n      </div>\n    );\n  }\n}\n","export default function isJSONString(str) {\n  if(typeof(str) !== 'string') return false;\n  try { JSON.parse(str); } catch (_) { return false; }\n  return true;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}